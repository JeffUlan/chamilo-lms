Query:
    type: object
    config:
        description: "GraphQL queries."
        fields:
            viewer:
                description: "A registered user on the platform."
                type: "User"
                resolve: '@=resolver("viewer")'
            course:
                description: 'Get the data from a course on the platform.'
                type: 'Course'
                args:
                    id:
                        type: 'Int!'
                resolve: "@=resolver('course', [args['id'], context])"
            session:
                description: 'Get the data from a session on the platform.'
                type: 'Session'
                args:
                    id:
                        type: 'Int!'
                resolve: "@=resolver('session', [args['id'], context])"
            sessionCategory:
                description: 'Get the data from a session category.'
                type: 'SessionCategory'
                args:
                    id:
                        type: 'Int!'
                resolve: "@=resolver('sessioncategory', [args['id'], context])"

User:
    type: object
    config:
        description: "Registered user."
        resolveField: '@=resolver("Chamilo\\ApiBundle\\GraphQL\\Resolver\\UserResolver", [value, args, info, context])'
        fields:
            id:
                description: "The unique ID of the user."
                type: "Int"
            firstname:
                type: "String"
            lastname:
                type: "String"
            username:
                type: "String"
            email:
                type: "String"
            officialCode:
                type: "String"
            status:
                type: "UserStatus"
            picture:
                type: "String"
                args:
                    size:
                        type: "ImageSize"
                        defaultValue: '@=constant("ICON_SIZE_MEDIUM")'
            messages:
                description: 'Received messages for the user.'
                type: '[UserMessage]'
                args:
                    lastId:
                        description: 'Last received by the app message ID.'
                        type: 'Int'
                        defaultValue: 0
            messageContacts:
                description: 'Get potential users to send a message for the current user.'
                type: '[User]'
                args:
                    filter:
                        description: 'The search text to filter the user list.'
                        type: 'String!'
            courses:
                description: 'Course list for the current user.'
                type: '[Course]'
            sessions:
                description: 'Session list for the current user.'
                type: '[Session]'

UserMessage:
    type: object
    config:
        description: 'Received message by user.'
        fields:
            id:
                description: 'The unique ID of the message.'
                type: 'Int'
            title:
                type: 'String'
            content:
                type: 'String'
            sender:
                type: 'User'
                resolve: "@=resolver('message_sender', [value])"
            sendDate:
                type: 'DateTime'
            excerpt:
                type: 'String'
                args:
                    length:
                        description: 'The approximate desired length. 50 chars by default.'
                        type: 'Int'
                        defaultValue: 50
                resolve: "@=resolver('message_excerpt', [value, args['length']])"
            hasAttachments:
                type: 'Boolean'
                resolve: "@=resolver('message_has_attachments', [value])"

Course:
    type: object
    config:
        description: 'A course registered on the platform.'
        resolveField: '@=resolver("Chamilo\\ApiBundle\\GraphQL\\Resolver\\CourseResolver", [value, args, info, context])'
        fields:
            id:
                description: 'The unique ID of the course.'
                type: 'Int'
            title:
                type: 'String'
            code:
                type: 'String'
            categoryCode:
                type: 'String'
            directory:
                type: 'String'
            picture:
                type: 'String'
                args:
                    fullSize:
                        description: 'It indicates whether to get the full-sized image.'
                        type: 'Boolean'
                        defaultValue: false
            teachers:
                description: 'Teachers list in course.'
                type: "[User]"
            tools:
                description: 'List of names from available tools for student view.'
                type: '[String]'

SessionCategory:
    type: object
    config:
        description: 'A session category.'
        fields:
            id:
                description: 'The unique ID of the category.'
                type: 'Int'
            name:
                type: 'String'
            startDate:
                type: 'DateTime'
                resolve: "@=resolver('sessioncategory_startdate', [value])"
            endDate:
                type: 'DateTime'
                resolve: "@=resolver('sessioncategory_enddate', [value])"

Session:
    type: object
    config:
        description: 'A session registered on the platform.'
        resolveField: '@=resolver("Chamilo\\ApiBundle\\GraphQL\\Resolver\\SessionResolver", [value, args, info, context])'
        fields:
            id:
                description: 'The unique ID of the session.'
                type: 'Int'
            name:
                type: 'String'
            category:
                type: 'SessionCategory'
            description:
                type: 'String'
            numberOfCourses:
                type: 'Int'
            numberOfUsers:
                type: 'Int'
            duration:
                type: 'Int'
            displayStartDate:
                type: 'DateTime'
            displayEndDate:
                type: 'DateTime'
            accessStartDate:
                type: 'DateTime'
            accessEndDate:
                type: 'DateTime'
            coachAccessStartDate:
                type: 'DateTime'
            coachAccessEndDate:
                type: 'DateTime'
            generalCoach:
                type: 'User'
            courses:
                type: '[Course]'
