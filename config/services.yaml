services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true       # Allows optimizing the container by removing unused services; this also means
          # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Chamilo\PageBundle\:
        resource: '../src/PageBundle/*'
        exclude: '../src/PageBundle/{Entity,Migrations,Tests}'
        public: true

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    password_encryption: '%env(APP_ENCRYPT_METHOD)%'
    secret: '%env(APP_SECRET)%'
    locale: '%env(APP_LOCALE)%'
    url_append: '%env(APP_URL_APPEND)%'
    installed: '%env(APP_INSTALLED)%'
    twig:
        form:
            resources:
                - 'GeneratorBundle::fields.html.twig'

    mailer_transport: smtp
    mailer_host: 127.0.0.1
    mailer_user: admin@example.com
    mailer_password: null
    course_info_is_not_editable: false
    sonata_media.cdn.host: /public/uploads/media
    sonata_page.varnish.command: 'if [ ! -r "/etc/varnish/secret" ]; then echo "VALID ERROR :/"; else varnishadm -S /etc/varnish/secret -T 127.0.0.1:6082 {{ COMMAND }} "{{ EXPRESSION }}"; fi;'
    router.request_context.base_url: '%url_append%'
    asset.request_context.base_path: '%router.request_context.base_url%'
