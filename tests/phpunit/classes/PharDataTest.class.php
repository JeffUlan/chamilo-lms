<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-01-07 at 09:22:56.
 */
class PharDataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var PharData
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new PharData;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers PharData::__destruct
     * @todo   Implement test__destruct().
     */
    public function test__destruct()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::addEmptyDir
     * @todo   Implement testAddEmptyDir().
     */
    public function testAddEmptyDir()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::addFile
     * @todo   Implement testAddFile().
     */
    public function testAddFile()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::addFromString
     * @todo   Implement testAddFromString().
     */
    public function testAddFromString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::buildFromDirectory
     * @todo   Implement testBuildFromDirectory().
     */
    public function testBuildFromDirectory()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::buildFromIterator
     * @todo   Implement testBuildFromIterator().
     */
    public function testBuildFromIterator()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::compressFiles
     * @todo   Implement testCompressFiles().
     */
    public function testCompressFiles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::decompressFiles
     * @todo   Implement testDecompressFiles().
     */
    public function testDecompressFiles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::compress
     * @todo   Implement testCompress().
     */
    public function testCompress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::decompress
     * @todo   Implement testDecompress().
     */
    public function testDecompress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::convertToExecutable
     * @todo   Implement testConvertToExecutable().
     */
    public function testConvertToExecutable()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::convertToData
     * @todo   Implement testConvertToData().
     */
    public function testConvertToData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::copy
     * @todo   Implement testCopy().
     */
    public function testCopy()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::count
     * @todo   Implement testCount().
     */
    public function testCount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::delete
     * @todo   Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::delMetadata
     * @todo   Implement testDelMetadata().
     */
    public function testDelMetadata()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::extractTo
     * @todo   Implement testExtractTo().
     */
    public function testExtractTo()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getAlias
     * @todo   Implement testGetAlias().
     */
    public function testGetAlias()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getPath
     * @todo   Implement testGetPath().
     */
    public function testGetPath()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getMetadata
     * @todo   Implement testGetMetadata().
     */
    public function testGetMetadata()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getModified
     * @todo   Implement testGetModified().
     */
    public function testGetModified()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getSignature
     * @todo   Implement testGetSignature().
     */
    public function testGetSignature()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getStub
     * @todo   Implement testGetStub().
     */
    public function testGetStub()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getVersion
     * @todo   Implement testGetVersion().
     */
    public function testGetVersion()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::hasMetadata
     * @todo   Implement testHasMetadata().
     */
    public function testHasMetadata()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::isBuffering
     * @todo   Implement testIsBuffering().
     */
    public function testIsBuffering()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::isCompressed
     * @todo   Implement testIsCompressed().
     */
    public function testIsCompressed()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::isFileFormat
     * @todo   Implement testIsFileFormat().
     */
    public function testIsFileFormat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::isWritable
     * @todo   Implement testIsWritable().
     */
    public function testIsWritable()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::offsetExists
     * @todo   Implement testOffsetExists().
     */
    public function testOffsetExists()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::offsetGet
     * @todo   Implement testOffsetGet().
     */
    public function testOffsetGet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::offsetSet
     * @todo   Implement testOffsetSet().
     */
    public function testOffsetSet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::offsetUnset
     * @todo   Implement testOffsetUnset().
     */
    public function testOffsetUnset()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::setAlias
     * @todo   Implement testSetAlias().
     */
    public function testSetAlias()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::setDefaultStub
     * @todo   Implement testSetDefaultStub().
     */
    public function testSetDefaultStub()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::setMetadata
     * @todo   Implement testSetMetadata().
     */
    public function testSetMetadata()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::setSignatureAlgorithm
     * @todo   Implement testSetSignatureAlgorithm().
     */
    public function testSetSignatureAlgorithm()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::setStub
     * @todo   Implement testSetStub().
     */
    public function testSetStub()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::startBuffering
     * @todo   Implement testStartBuffering().
     */
    public function testStartBuffering()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::stopBuffering
     * @todo   Implement testStopBuffering().
     */
    public function testStopBuffering()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::apiVersion
     * @todo   Implement testApiVersion().
     */
    public function testApiVersion()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::canCompress
     * @todo   Implement testCanCompress().
     */
    public function testCanCompress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::canWrite
     * @todo   Implement testCanWrite().
     */
    public function testCanWrite()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::createDefaultStub
     * @todo   Implement testCreateDefaultStub().
     */
    public function testCreateDefaultStub()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getSupportedCompression
     * @todo   Implement testGetSupportedCompression().
     */
    public function testGetSupportedCompression()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::getSupportedSignatures
     * @todo   Implement testGetSupportedSignatures().
     */
    public function testGetSupportedSignatures()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::interceptFileFuncs
     * @todo   Implement testInterceptFileFuncs().
     */
    public function testInterceptFileFuncs()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::isValidPharFilename
     * @todo   Implement testIsValidPharFilename().
     */
    public function testIsValidPharFilename()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::loadPhar
     * @todo   Implement testLoadPhar().
     */
    public function testLoadPhar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::mapPhar
     * @todo   Implement testMapPhar().
     */
    public function testMapPhar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::running
     * @todo   Implement testRunning().
     */
    public function testRunning()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::mount
     * @todo   Implement testMount().
     */
    public function testMount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::mungServer
     * @todo   Implement testMungServer().
     */
    public function testMungServer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::unlinkArchive
     * @todo   Implement testUnlinkArchive().
     */
    public function testUnlinkArchive()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PharData::webPhar
     * @todo   Implement testWebPhar().
     */
    public function testWebPhar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
