<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-01-07 at 09:22:53.
 */
class ReflectionMethodTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var ReflectionMethod
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ReflectionMethod;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers ReflectionMethod::export
     * @todo   Implement testExport().
     */
    public function testExport()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::__toString
     * @todo   Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isPublic
     * @todo   Implement testIsPublic().
     */
    public function testIsPublic()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isPrivate
     * @todo   Implement testIsPrivate().
     */
    public function testIsPrivate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isProtected
     * @todo   Implement testIsProtected().
     */
    public function testIsProtected()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isAbstract
     * @todo   Implement testIsAbstract().
     */
    public function testIsAbstract()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isFinal
     * @todo   Implement testIsFinal().
     */
    public function testIsFinal()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isStatic
     * @todo   Implement testIsStatic().
     */
    public function testIsStatic()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isConstructor
     * @todo   Implement testIsConstructor().
     */
    public function testIsConstructor()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::isDestructor
     * @todo   Implement testIsDestructor().
     */
    public function testIsDestructor()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::getClosure
     * @todo   Implement testGetClosure().
     */
    public function testGetClosure()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::getModifiers
     * @todo   Implement testGetModifiers().
     */
    public function testGetModifiers()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::invoke
     * @todo   Implement testInvoke().
     */
    public function testInvoke()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::invokeArgs
     * @todo   Implement testInvokeArgs().
     */
    public function testInvokeArgs()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::getDeclaringClass
     * @todo   Implement testGetDeclaringClass().
     */
    public function testGetDeclaringClass()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::getPrototype
     * @todo   Implement testGetPrototype().
     */
    public function testGetPrototype()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers ReflectionMethod::setAccessible
     * @todo   Implement testSetAccessible().
     */
    public function testSetAccessible()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
