<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-01-07 at 09:22:56.
 */
class IntlDateFormatterTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var IntlDateFormatter
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new IntlDateFormatter;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers IntlDateFormatter::create
     * @todo   Implement testCreate().
     */
    public function testCreate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getDateType
     * @todo   Implement testGetDateType().
     */
    public function testGetDateType()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getTimeType
     * @todo   Implement testGetTimeType().
     */
    public function testGetTimeType()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getCalendar
     * @todo   Implement testGetCalendar().
     */
    public function testGetCalendar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::setCalendar
     * @todo   Implement testSetCalendar().
     */
    public function testSetCalendar()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getTimeZoneId
     * @todo   Implement testGetTimeZoneId().
     */
    public function testGetTimeZoneId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::setTimeZoneId
     * @todo   Implement testSetTimeZoneId().
     */
    public function testSetTimeZoneId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::setPattern
     * @todo   Implement testSetPattern().
     */
    public function testSetPattern()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getPattern
     * @todo   Implement testGetPattern().
     */
    public function testGetPattern()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getLocale
     * @todo   Implement testGetLocale().
     */
    public function testGetLocale()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::setLenient
     * @todo   Implement testSetLenient().
     */
    public function testSetLenient()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::isLenient
     * @todo   Implement testIsLenient().
     */
    public function testIsLenient()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::format
     * @todo   Implement testFormat().
     */
    public function testFormat()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::parse
     * @todo   Implement testParse().
     */
    public function testParse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::localtime
     * @todo   Implement testLocaltime().
     */
    public function testLocaltime()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getErrorCode
     * @todo   Implement testGetErrorCode().
     */
    public function testGetErrorCode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers IntlDateFormatter::getErrorMessage
     * @todo   Implement testGetErrorMessage().
     */
    public function testGetErrorMessage()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
